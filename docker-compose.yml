version: '3.9'
services:
  nginx-service:
    image: nginx:mainline-alpine
    container_name: laundry-labels-app-nginx
    ports:
      - '80:80'
      - '443:443'
    restart: unless-stopped
    volumes:
      - nginx-logs-volume:/var/log/nginx
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - letsencrypt-volume:/var/www/_letsencrypt
      - certbot-etc-volume:/etc/letsencrypt
      - certbot-var-volume:/var/lib/letsencrypt
      - dhparam-volume:/etc/ssl/certs
    networks:
      - main-network
    depends_on:
      - app-service
  goaccess-service:
    image: allinurl/goaccess:1.5.3
    container_name: laundry-labels-app-goaccess
    ports:
      - 7890:7890
    restart: unless-stopped
    volumes:
      - ./docker/goaccess/goaccess.conf:/etc/goaccess/goaccess.conf
      - nginx-logs-volume:/etc/goaccess/logs
    networks:
      - main-network
    depends_on:
      - nginx-service
    command: goaccess --no-global-config --config-file=/etc/goaccess/goaccess.conf
  mongodb-service:
    image: mongo:latest
    container_name: laundry-labels-app-mongodb
    ports:
      - 27017:27017
    restart: unless-stopped
    volumes:
      - mongodb-volume:/data/db
      - mongodb-volume:/data/configdb
    networks:
      - main-network
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
  redis-service:
    image: redis:alpine
    container_name: laundry-labels-app-redis
    ports:
      - 6379:6379
    restart: unless-stopped
    volumes:
      - redis-volume:/usr/local/etc/redis
      - redis-volume:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - main-network
    env_file:
      - .env
    command: redis-server /usr/local/etc/redis/ --requirepass ${REDIS_PASSWORD}
  app-service:
    container_name: laundry-labels-app-api
    ports:
      - ${APP_PORT}:${APP_PORT}
    restart: always
    volumes:
      - app-volume:/app
      - app-upload-volume:/home/node/app/dist/upload
      - app-logs-volume:/var/log/laundry-labels-app/api
    networks:
      - main-network
    depends_on:
      - mongodb-service
      - redis-service
    build: .
    command: npm run production
    env_file:
      - .env
    environment:
      DATABASE_URL: mongodb://mongodb-service
      REDIS_HOST: redis-service
  certbot-service:
    image: certbot/certbot
    container_name: laundry-labels-app-certbot
    volumes:
      - certbot-etc-volume:/etc/letsencrypt
      - certbot-var-volume:/var/lib/letsencrypt
      - letsencrypt-volume:/var/www/_letsencrypt
    depends_on:
      - nginx-service
    env_file:
      - .env
    environment:
      EMAIL: ${EMAIL}
      DOMAINS_LIST: ${DOMAINS_LIST}
    command: certonly --webroot --webroot-path=/var/www/_letsencrypt --email $EMAIL --agree-tos --no-eff-email --force-renewal -d $DOMAINS_LIST

volumes:
  mongodb-volume:
  redis-volume:
  app-volume:
  certbot-etc-volume:
  certbot-var-volume:
  letsencrypt-volume:
  nginx-logs-volume:
  goaccess-volume:
  app-upload-volume:
  app-logs-volume:
  dhparam-volume:
    driver: local
    driver_opts:
      type: none
      device: docker/certbot/dhparam
      o: bind

networks:
  main-network:
    driver: bridge
