version: '3.9'
services:
  nginx:
    image: nginx:mainline-alpine
    container_name: laundry-labels-app-server-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - web-root:/var/www/html
      - ./docker/nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    networks:
      - main-network
  mongodb:
    image: mongo:latest
    container_name: laundry-labels-app-server-mongodb
    hostname: mongodb-host
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - mongodb-volume:/data/db
    networks:
      - main-network
  redis:
    image: redis:alpine
    container_name: laundry-labels-app-server-redis
    ports:
      - 6379:6379
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - main-network
    command: redis-server /usr/local/etc/redis/
  app:
    container_name: laundry-labels-app-server-app
    restart: always
    build: .
    command: npm run production
    env_file:
      - .env
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      - mongodb
      - redis
    volumes:
      - app-container:/app
    networks:
      - main-network
    environment:
      APP_PORT: ${APP_PORT}
      DATABASE_URL: mongodb://mongodb-host:27017
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
  certbot:
    image: certbot/certbot
    container_name: laundry-labels-app-server-certbot
    env_file:
      - .env
    environment:
      EMAIL: ${EMAIL}
      DOMAINS_LIST: ${DOMAINS_LIST}
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email $EMAIL --agree-tos --no-eff-email --force-renewal -d $DOMAINS_LIST

volumes:
  mongodb-volume:
  redis-container:
  app-container:
  certbot-etc:
  certbot-var:
  web-root:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: docker/certbot/dhparam
      o: bind

networks:
  main-network:
    driver: bridge
